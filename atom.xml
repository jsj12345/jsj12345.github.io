<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>山东大学云计算技术实验报告</title>
  
  <subtitle>实验3-2</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-26T13:09:38.743Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>荆树吉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux环境基本操作练习</title>
    <link href="http://example.com/2023/03/22/1/"/>
    <id>http://example.com/2023/03/22/1/</id>
    <published>2023-03-22T03:40:45.505Z</published>
    <updated>2023-03-26T13:09:38.743Z</updated>
    
    <content type="html"><![CDATA[<h1 id="山东大学实验报告-1"><a href="#山东大学实验报告-1" class="headerlink" title="山东大学实验报告 1"></a>山东大学实验报告 1</h1><h2 id="山东大学-计算机科学与技术-学院"><a href="#山东大学-计算机科学与技术-学院" class="headerlink" title="山东大学  计算机科学与技术  学院"></a>山东大学  计算机科学与技术  学院</h2><h2 id="云计算技术-课程实验报告"><a href="#云计算技术-课程实验报告" class="headerlink" title="云计算技术  课程实验报告"></a>云计算技术  课程实验报告</h2><p><strong>学号：202000130199  |姓名：荆树吉 |  班级：20数据</strong></p><h3 id="实验题目：Linux环境基本操作练习"><a href="#实验题目：Linux环境基本操作练习" class="headerlink" title="实验题目：Linux环境基本操作练习"></a>实验题目：Linux环境基本操作练习</h3><h3 id="实验学时：2"><a href="#实验学时：2" class="headerlink" title="实验学时：2"></a>实验学时：2</h3><h3 id="实验日期：-2023-2-25"><a href="#实验日期：-2023-2-25" class="headerlink" title="实验日期：  2023.2.25"></a>实验日期：  2023.2.25</h3><h3 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h3><p>在Linux环境下，熟悉基本的文件操作和命令</p><p>具体包括：了解Linux，浏览文件、创建文件、安装一个程序、了解Python、C++等常用编程环境</p><h3 id="硬件环境："><a href="#硬件环境：" class="headerlink" title="硬件环境："></a>硬件环境：</h3><p>计算机一台</p><h3 id="软件环境："><a href="#软件环境：" class="headerlink" title="软件环境："></a>软件环境：</h3><p>Linux</p><h3 id="实验步骤与内容："><a href="#实验步骤与内容：" class="headerlink" title="实验步骤与内容："></a>实验步骤与内容：</h3><h4 id="1-了解linux"><a href="#1-了解linux" class="headerlink" title="1.了解linux"></a>1.了解linux</h4><p>Linux，全称GNU&#x2F;Linux，是一种免费使用和自由传播的类UNIX操作系统，其内核由林纳斯·本纳第克特·托瓦兹于1991年10月5日首次发布，它主要受到Minix和Unix思想的启发，是一个基于POSIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的Unix工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。Linux有上百种不同的发行版，如基于社区开发的debian、archlinux，和基于商业开发的Red Hat Enterprise Linux、SUSE、Oracle Linux等。</p><h4 id="2-浏览文件和创建文件"><a href="#2-浏览文件和创建文件" class="headerlink" title="2.浏览文件和创建文件"></a>2.浏览文件和创建文件</h4><p>ls可以浏览当前文件夹的所有文件vi可以浏览文件之间的具体内容</p><p><img src="/2023/03/22/1/1.png" alt="1.浏览文件夹内容"></p><p>vi test</p><p><img src="/2023/03/22/1/2.png" alt="2.浏览文件内容"></p><h4 id="3-安装程序"><a href="#3-安装程序" class="headerlink" title="3.安装程序"></a>3.安装程序</h4><h5 id="一、-源码编译安装（二进制安装）"><a href="#一、-源码编译安装（二进制安装）" class="headerlink" title="一、 源码编译安装（二进制安装）"></a>一、 源码编译安装（二进制安装）</h5><p>程序：由开发人员写代码一个一个单词敲出来的</p><p>源码：编写好的.c.java文件</p><p>编译：将人类写的代码翻译成二进制语言</p><p>安装：将二进制保存在键盘上</p><p>缺点：</p><p> 如果编译出了问题，你不懂源代码，无法解决</p><p>安装过程复杂</p><p>没有统一的管理人员</p><p>优点：</p><p> 契合系统，兼容性强</p><p>如果你可以看懂源代码，修改新增功能</p><p>比较自由</p><h5 id="二、rpm安装（安装包管理工具）"><a href="#二、rpm安装（安装包管理工具）" class="headerlink" title="二、rpm安装（安装包管理工具）"></a>二、rpm安装（安装包管理工具）</h5><p>优点：</p><p> 统一的安装包格式</p><p>已经帮你编译完成</p><p>使用简单</p><p>缺点：</p><p> 有依赖关系（安装 a ，就需要先安装别的）</p><p>查询（对已安装程序查询）</p><p>查看系统已安装的所有软件（-qa）</p><h4 id="4-c-和python的利用-vscode"><a href="#4-c-和python的利用-vscode" class="headerlink" title="4 .c++,和python的利用 vscode"></a>4 .c++,和python的利用 vscode</h4><h5 id="1-c-代码"><a href="#1-c-代码" class="headerlink" title="1.c++代码"></a>1.c++代码</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,X,Y;</span><br><span class="line"><span class="type">int</span> x[<span class="number">202</span>],y[<span class="number">202</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">d</span>&#123;</span><br><span class="line">    <span class="type">int</span> dis;</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d node[<span class="number">202</span>];</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;X&gt;&gt;Y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line">        node[i].dis=(x[i]-X)*(x[i]-X)+(y[i]-Y)*(y[i]-Y);</span><br><span class="line">        node[i].no=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> t,k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((node[i].dis&gt;node[j].dis)||((node[i].dis==node[j].dis)&amp;&amp;(node[i].no&gt;node[j].no)))</span><br><span class="line">            &#123;</span><br><span class="line">               t=node[i].dis;</span><br><span class="line">               node[i].dis=node[j].dis;</span><br><span class="line">               node[j].dis=t;</span><br><span class="line">               k=node[i].no;</span><br><span class="line">               node[i].no=node[j].no;</span><br><span class="line">               node[j].no=k;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;node[i].dis&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;node[i].no&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;node[<span class="number">0</span>].no+<span class="number">1</span>&lt;&lt;endl&lt;&lt;node[<span class="number">1</span>].no+<span class="number">1</span>&lt;&lt;endl&lt;&lt;node[<span class="number">2</span>].no+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>给出一个点的坐标和其他的点的个数</p><p>再给出几个对应的点的坐标</p><p>判断里这个点最近的三个点</p><p>三个点的顺序由序号越小对应的距离就越近</p><h5 id="2-python-代码"><a href="#2-python-代码" class="headerlink" title="2.python 代码"></a>2.python 代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment">#读入文件</span></span><br><span class="line">file_path = <span class="string">&quot;data.txt&quot;</span></span><br><span class="line">df = pd.read_table(file_path, header=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义 x  y变量</span></span><br><span class="line">x = []</span><br><span class="line">y = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义颜色变量</span></span><br><span class="line">color = [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;w&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#用for循环将文件中的值赋值给x，y</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(df[<span class="number">0</span>])):</span><br><span class="line">    x.append(<span class="built_in">int</span>(df[<span class="number">0</span>][i].split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>]))</span><br><span class="line">    y.append(<span class="built_in">int</span>(df[<span class="number">0</span>][i].split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#画图</span></span><br><span class="line">plt.scatter(x, y, c=color[<span class="number">2</span>], edgecolors=<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line">画一个散点图</span><br><span class="line">数据如下</span><br><span class="line"><span class="number">151</span>,<span class="number">54</span></span><br><span class="line"><span class="number">137</span>,<span class="number">55</span></span><br><span class="line"><span class="number">95</span>,<span class="number">66</span></span><br><span class="line"><span class="number">156</span>,<span class="number">91</span></span><br><span class="line"><span class="number">193</span>,<span class="number">101</span></span><br><span class="line"><span class="number">58</span>,<span class="number">104</span></span><br><span class="line"><span class="number">133</span>,<span class="number">105</span></span><br><span class="line"><span class="number">120</span>,<span class="number">118</span></span><br><span class="line"><span class="number">167</span>,<span class="number">136</span></span><br><span class="line"><span class="number">110</span>,<span class="number">149</span></span><br><span class="line"><span class="number">96</span>,<span class="number">174</span></span><br><span class="line"><span class="number">22</span>,<span class="number">184</span></span><br><span class="line"><span class="number">60</span>,<span class="number">193</span></span><br><span class="line"><span class="number">88</span>,<span class="number">198</span></span><br><span class="line"><span class="number">177</span>,<span class="number">202</span></span><br><span class="line"><span class="number">213</span>,<span class="number">235</span></span><br><span class="line"><span class="number">133</span>,<span class="number">249</span></span><br><span class="line"><span class="number">127</span>,<span class="number">255</span></span><br><span class="line"><span class="number">70</span>,<span class="number">257</span></span><br><span class="line"><span class="number">40</span>,<span class="number">273</span></span><br><span class="line"><span class="number">64</span>,<span class="number">271</span></span><br><span class="line"><span class="number">168</span>,<span class="number">286</span></span><br><span class="line"><span class="number">126</span>,<span class="number">325</span></span><br><span class="line"><span class="number">132</span>,<span class="number">335</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结论分析与体会"><a href="#结论分析与体会" class="headerlink" title="结论分析与体会"></a>结论分析与体会</h3><p>Linux不仅系统性能稳定，而且是开源软件。其核心防火墙组件性能高效、配置简单，保证了系统的安全。在很多企业网络中，为了追求速度和安全，Linux不仅仅是被网络运维人员当作服务器使用，甚至当作网络防火墙，这是Linux的一大亮点。</p><p>Linux具有开放源码、没有版权、技术社区用户多等特点，开放源码使得用户可以自由裁剪，灵活性高，功能强大，成本低。尤其系统中内嵌网络协议栈，经过适当的配置就可实现路由器的功能。这些特点使得Linux成为开发路由交换设备的理想开发平台。</p><p>Linux的基本思想有两点：第一，一切都是文件；第二，每个文件都有确定的用途。其中第一条详细来讲就是系统中的所有都归结为一个文件，包括命令、硬件和软件设备、操作系统、进程等等对于操作系统内核而言，都被视为拥有各自特性或类型的文件。至于说Linux是基于Unix的，很大程度上也是因为这两者的基本思想十分相近。</p>]]></content>
    
    
    <summary type="html">7</summary>
    
    
    
    <category term="云计算" scheme="http://example.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="linux 操作" scheme="http://example.com/tags/linux-%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>（hexo github）搭建云平台</title>
    <link href="http://example.com/2023/03/21/ok/"/>
    <id>http://example.com/2023/03/21/ok/</id>
    <published>2023-03-21T12:37:43.581Z</published>
    <updated>2023-03-26T13:08:41.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="山东大学实验报告3-1"><a href="#山东大学实验报告3-1" class="headerlink" title="山东大学实验报告3-1"></a>山东大学实验报告3-1</h1><h2 id="山东大学-计算机科学与技术-学院"><a href="#山东大学-计算机科学与技术-学院" class="headerlink" title="山东大学  计算机科学与技术  学院"></a>山东大学  计算机科学与技术  学院</h2><h2 id="云计算技术-课程实验报告"><a href="#云计算技术-课程实验报告" class="headerlink" title="云计算技术  课程实验报告"></a>云计算技术  课程实验报告</h2><table><thead><tr><th align="left"><strong>学号：202000130199  |姓名：荆树吉 |  班级：20数据</strong></th></tr></thead><tbody><tr><td align="left"><strong>实验题目：利用云平台搭建个人博客</strong></td></tr><tr><td align="left">**实验学时：2|<strong>实验日期： 2023.3.15</strong></td></tr><tr><td align="left"><strong>实验目的：熟悉个人博客系统的搭建。<br>具体包括：<br>参考方案：注册Github账号，搭建Hexo环境并实现个人博客搭建，撰写实验报告。</strong></td></tr><tr><td align="left"><strong>硬件环境： <br>联网的计算机一台</strong></td></tr><tr><td align="left">**软件环境：<br>Windows **</td></tr><tr><td align="left"><strong>实验步骤与内容：</strong></td></tr><tr><td align="left">•    1.安装Git<br>•<strong>windows：</strong>到git官网上下载.exe文件,Download git,安装选项还是全部默认，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开git了。<br>•2.安装Node.js<br>•<strong>windows：</strong>下载稳定版或者最新版都可以Node.js，安装选项全部默认，一路点击Next。<br>最后安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。<br>•3.安装Hexo<br>•前面git和nodejs安装好后，就可以安装hexo了，可以先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）<br>•定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，无视它就行<br>•npm install -g hexo-cli<br>•安装完后输入hexo -v验证是否安装成功。<br>•<br>•至此hexo就安装完了。<br>hexo init<br>这个Hexo可以自己取什么名字都行，然后，接着输入npm install安装必备的组件。<br><br>新建完成后，指定文件夹Hexo目录下有：<br><br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题**<br>_config.yml: 博客的配置文件**<br>这样本地的网站配置也弄好啦，输入hexo g生成静态网页，然后输入hexo s打开本地服务器，<br> <br><img src="/2023/03/21/ok/1.png" alt="初始">•4.GitHub创建个人仓库<br>•打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93New">https://github.com/，新建一个项目仓库New</a> repository，如下所示：<br>• <br><img src="/2023/03/21/ok/2.png" alt="建仓库"><br>•生成SSH添加到GitHub，连接Github与本地。<br>•右键打开git bash，然后输入下面命令：<br>•git config –global user.name “yourname”<br>•git config –global user.email “youremail”<br>•注意：第一次使用git后需要将用户名和邮箱进行初始化<br>•<br>•这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。例如<br>•git config –global user.name “jsj12345”<br>•git config –global user.email <a href="mailto:&#x32;&#49;&#49;&#x35;&#53;&#x32;&#53;&#56;&#x33;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#109;">&#x32;&#49;&#49;&#x35;&#53;&#x32;&#53;&#56;&#x33;&#50;&#x40;&#113;&#113;&#x2e;&#x63;&#x6f;&#109;</a><br>•可以用以下两条，检查一下你有没有输对<br>•git config user.name<br>•git config user.email<br>•然后创建SSH,一路回车<br>•ssh-keygen -t rsa -C “youremail”<br>•cat ~&#x2F;.ssh&#x2F;id_rsa.pub<br>•打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去。如图：<br>• <br><img src="/2023/03/21/ok/3.png" alt="密钥">)在git bash输入ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#x6d;">&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#x62;&#x2e;&#99;&#x6f;&#x6d;</a>，如果如下图所示，出现你的用户名，那就成功了。<br>•6.将hexo部署到GitHub<br>•这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息<br>•修改最后一行的配置：<br>• deploy:<br>•  type: git<br>•  repository: <a href="https://github.com/jsj12345/jsj12345.github.io.git">https://github.com/jsj12345/jsj12345.github.io.git</a><br>•  branch: master<br>•repository修改为你自己的github项目地址即可就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。<br>•<br>•这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。<br>•npm install hexo-deployer-git –save<br>•hexo clean<br>•hexo generate<br>•hexo deploy<br>•<br>•7.设置个人域名<br>•可省略因为需要花钱，且意义不明显<br>•8.发布文章<br>•首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git。<br>•<br>•然后输入hexo new post “我的第一篇博客”，新建一篇文章。<br>•<br>•然后打开D:\Hexo\source_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。<br>•你可以会直接在vscode里面编写markdown文件，可以实时预览，也可以用用其他编辑md文件的软件的工具编写。<br>•编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。<br>•<br>•到这儿基本第一部分就完成了，已经完整搭建起一个比较简陋的个人博客了，接下来我们就可以对我们的博客进行个性化定制了。<br>个性化定制暂略</td></tr><tr><td align="left">结论分析与体会：Hexo是高效的静态网站生成框架，它基于Node.js，快速，简单且功能强大，是搭建博客的首选框架。通过Hexo，我们可以直接使用Markdown语法来撰写博客</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">实验报告3-1</summary>
    
    
    
    <category term="云计算" scheme="http://example.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="云平台搭建" scheme="http://example.com/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
