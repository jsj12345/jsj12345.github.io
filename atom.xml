<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>山东大学云计算技术实验报告</title>
  
  <subtitle>实验3-2</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-26T09:16:42.142Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>荆树吉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程序设计报告7</title>
    <link href="http://example.com/2023/03/22/1/"/>
    <id>http://example.com/2023/03/22/1/</id>
    <published>2023-03-22T03:40:45.505Z</published>
    <updated>2023-03-26T09:16:42.142Z</updated>
    
    <content type="html"><![CDATA[<p>程序设计报告7</p><p>一。</p><p>1.简答：</p><p>可能，根本达不到就是无穷大，第一维中的东西可以简化是因为在阶段K时f[x]k]  与 f[k][y ]不会被更新</p><p>2判断负环，一个点的线被松弛了N次一定是负环，一条边入了队列n此夜&#x3D;也以定是负环</p><p>二。</p><p>实验报告</p><p>1.题目</p><p><img src="/2023/03/22/1/1.png">)</p><p><img src="/2023/03/22/1/2.png"></p><p>解法：</p><p>一个人去买菜，则对应就对应的时间包含</p><p>另一个人去买菜，对应的时间包含</p><p>公共时间就是能力聊天的时间</p><p>时间复杂度</p><p>O（n(b-a)）</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="number">2u</span>sing <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="number">3</span><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">4</span>    <span class="type">int</span> n;</span><br><span class="line"><span class="number">5</span>    cin&gt;&gt;n;</span><br><span class="line"><span class="number">6</span>    <span class="type">int</span> time=<span class="number">0</span>;</span><br><span class="line"><span class="number">7</span>    <span class="type">bool</span> a_time[<span class="number">1000003</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="number">8</span>    <span class="type">bool</span> b_time[<span class="number">1000003</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="number">9</span>    <span class="type">int</span> a,b,c,d;</span><br><span class="line"><span class="number">10</span>    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="number">11</span>    &#123;</span><br><span class="line"><span class="number">12</span>        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="number">13</span>        <span class="keyword">for</span>(<span class="type">int</span> j=a+<span class="number">1</span>;j&lt;=b;j++)</span><br><span class="line"><span class="number">14</span>        &#123;</span><br><span class="line"><span class="number">15</span>            a_time[j]=<span class="literal">true</span>;</span><br><span class="line"><span class="number">16</span>        &#125;</span><br><span class="line"><span class="number">17</span>    &#125;</span><br><span class="line"><span class="number">18</span>    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="number">19</span>    &#123;</span><br><span class="line"><span class="number">20</span>        cin&gt;&gt;c&gt;&gt;d;</span><br><span class="line"><span class="number">21</span>        <span class="keyword">for</span>(<span class="type">int</span> j=c+<span class="number">1</span>;j&lt;=d;j++)</span><br><span class="line"><span class="number">22</span>        &#123;</span><br><span class="line"><span class="number">23</span>            b_time[j]=<span class="literal">true</span>;</span><br><span class="line"><span class="number">24</span>        &#125;</span><br><span class="line"><span class="number">25</span>    &#125;</span><br><span class="line"><span class="number">26</span>    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">1000003</span>;i++)</span><br><span class="line"><span class="number">27</span>    &#123;</span><br><span class="line"><span class="number">28</span>        <span class="keyword">if</span>(a_time[i]&amp;&amp;b_time[i])</span><br><span class="line"><span class="number">29</span>        &#123;</span><br><span class="line"><span class="number">30</span>           time++;</span><br><span class="line"><span class="number">31</span>        &#125;</span><br><span class="line"><span class="number">32</span>    &#125;</span><br><span class="line"><span class="number">33</span>    cout&lt;&lt;time;</span><br><span class="line"><span class="number">34</span>    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="number">35</span>&#125;</span><br></pre></td></tr></table></figure><p>2.题目</p><p><img src="/2023/03/22/1/3.png"></p><p><img src="/2023/03/22/1/4.png"></p><p>时间复杂度：变的个数随时在变不固定</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="number">2</span><span class="meta">#<span class="keyword">define</span> inf 1e9;</span></span><br><span class="line"><span class="number">3u</span>sing <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="number">4</span><span class="keyword">struct</span> edge&#123;</span><br><span class="line"><span class="number">5</span>    <span class="type">int</span> V;</span><br><span class="line"><span class="number">6</span>    <span class="type">int</span> Time;</span><br><span class="line"><span class="number">7</span>    <span class="type">int</span> Next;</span><br><span class="line"><span class="number">8</span>&#125;;</span><br><span class="line"><span class="number">9</span><span class="type">int</span> head[<span class="number">70000</span>];</span><br><span class="line"><span class="number">10</span><span class="type">int</span> n,m,w,s,e,t;</span><br><span class="line"><span class="number">11</span>edge E[<span class="number">70000</span>];</span><br><span class="line"><span class="number">1213</span><span class="type">int</span> number;</span><br><span class="line"><span class="number">14</span><span class="type">int</span> visit[<span class="number">70000</span>];</span><br><span class="line"><span class="number">15</span><span class="type">int</span> songchi[<span class="number">70000</span>];</span><br><span class="line"><span class="number">16</span><span class="type">int</span> dis[<span class="number">70000</span>];</span><br><span class="line"><span class="number">1718</span><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function">19</span>&#123;</span><br><span class="line"><span class="number">20</span>    number=<span class="number">0</span>;</span><br><span class="line"><span class="number">21</span>    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="number">22</span>    &#123;</span><br><span class="line"><span class="number">23</span>        head[i]=<span class="number">-1</span>;</span><br><span class="line"><span class="number">24</span>        E[i].V=<span class="number">0</span>;</span><br><span class="line"><span class="number">25</span>        E[i].Next=<span class="number">0</span>;</span><br><span class="line"><span class="number">26</span>        E[i].Time=<span class="number">0</span>;</span><br><span class="line"><span class="number">27</span>    &#125;</span><br><span class="line"><span class="number">28</span>&#125;</span><br><span class="line"><span class="number">29</span><span class="function"><span class="type">void</span> <span class="title">add1</span><span class="params">(<span class="type">int</span> start,<span class="type">int</span> end,<span class="type">int</span> time)</span><span class="comment">//路径的插入</span></span></span><br><span class="line"><span class="function">30</span>&#123;</span><br><span class="line"><span class="number">31</span>    number++;</span><br><span class="line"><span class="number">32</span>    E[number].V=end;</span><br><span class="line"><span class="number">33</span>    E[number].Time=time;</span><br><span class="line"><span class="number">34</span>    E[number].Next=head[start];</span><br><span class="line"><span class="number">35</span>    head[start]=number;</span><br><span class="line"><span class="number">36</span>    number++;</span><br><span class="line"><span class="number">37</span>    E[number].V=start;</span><br><span class="line"><span class="number">38</span>    E[number].Time=time;</span><br><span class="line"><span class="number">39</span>    E[number].Next=head[end];</span><br><span class="line"><span class="number">40</span>    head[end]=number;</span><br><span class="line"><span class="number">41</span>&#125;</span><br><span class="line"><span class="number">42</span><span class="function"><span class="type">void</span> <span class="title">add2</span><span class="params">(<span class="type">int</span> start,<span class="type">int</span> end,<span class="type">int</span> time)</span><span class="comment">//单项隧道的插入</span></span></span><br><span class="line"><span class="function">43</span>&#123;</span><br><span class="line"><span class="number">44</span>    number++;</span><br><span class="line"><span class="number">45</span>    E[number].V=end;</span><br><span class="line"><span class="number">46</span>    E[number].Time=-time;</span><br><span class="line"><span class="number">47</span>    E[number].Next=head[start];</span><br><span class="line"><span class="number">48</span>    head[start]=number;</span><br><span class="line"><span class="number">49</span>&#125;</span><br><span class="line"><span class="number">5051</span><span class="function"><span class="type">void</span> <span class="title">chuanyue</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function">52</span>&#123;</span><br><span class="line"><span class="number">53</span>    deque&lt;<span class="type">int</span>&gt; pp;</span><br><span class="line"><span class="number">54</span>    pp.<span class="built_in">push_back</span>(s);</span><br><span class="line"><span class="number">55</span>    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="number">56</span>    &#123;</span><br><span class="line"><span class="number">57</span>        visit[i]=<span class="number">0</span>;</span><br><span class="line"><span class="number">58</span>        dis[i]=inf;</span><br><span class="line"><span class="number">59</span>        songchi[i]=<span class="number">0</span>;</span><br><span class="line"><span class="number">60</span>    &#125;</span><br><span class="line"><span class="number">61</span>    dis[s]=<span class="number">0</span>;</span><br><span class="line"><span class="number">62</span>    visit[s]=<span class="number">1</span>;</span><br><span class="line"><span class="number">63</span>    <span class="type">int</span> present;</span><br><span class="line"><span class="number">64</span>    <span class="keyword">while</span>(!pp.<span class="built_in">empty</span>())</span><br><span class="line"><span class="number">65</span>    &#123;</span><br><span class="line"><span class="number">66</span>        present=pp.<span class="built_in">front</span>();</span><br><span class="line"><span class="number">67</span>        pp.<span class="built_in">pop_front</span>();</span><br><span class="line"><span class="number">68</span>        <span class="keyword">for</span>(<span class="type">int</span> i=head[present];i!=<span class="number">-1</span>;i=E[i].Next)</span><br><span class="line"><span class="number">69</span>        &#123;</span><br><span class="line"><span class="number">70</span>            <span class="keyword">if</span>(dis[E[i].V]&gt;dis[present]+E[i].Time)</span><br><span class="line"><span class="number">71</span>            &#123;</span><br><span class="line"><span class="number">72</span>                dis[E[i].V]=dis[present]+E[i].Time;</span><br><span class="line"><span class="number">73</span>                songchi[E[i].V]++;</span><br><span class="line"><span class="number">74</span>                <span class="keyword">if</span>(songchi[E[i].V]&gt;=n)</span><br><span class="line"><span class="number">75</span>                &#123;</span><br><span class="line"><span class="number">76</span>                    cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="number">77</span>                    <span class="keyword">return</span>;</span><br><span class="line"><span class="number">78</span>                &#125;</span><br><span class="line"><span class="number">79</span>                <span class="keyword">if</span>(!visit[E[i].V])</span><br><span class="line"><span class="number">80</span>                &#123;</span><br><span class="line"><span class="number">81</span>                    visit[E[i].V]=<span class="number">1</span>;</span><br><span class="line"><span class="number">82</span>                    pp.<span class="built_in">push_back</span>(E[i].V);</span><br><span class="line"><span class="number">83</span>                &#125;</span><br><span class="line"><span class="number">84</span>            &#125;</span><br><span class="line"><span class="number">85</span>            visit[present]=<span class="number">0</span>;</span><br><span class="line"><span class="number">86</span>        &#125;</span><br><span class="line"><span class="number">8788</span>    &#125;</span><br><span class="line"><span class="number">89</span>    cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="number">90</span>&#125;</span><br><span class="line"><span class="number">91</span><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="number">92</span>     <span class="type">int</span> F;</span><br><span class="line"><span class="number">93</span>     cin&gt;&gt;F;</span><br><span class="line"><span class="number">9495</span>     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;F;i++)</span><br><span class="line"><span class="number">96</span>     &#123;</span><br><span class="line"><span class="number">97</span>         cin&gt;&gt;n&gt;&gt;m&gt;&gt;w;</span><br><span class="line"><span class="number">98</span>         <span class="built_in">init</span>(n);</span><br><span class="line"><span class="number">99</span>         <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line"><span class="number">100</span>         &#123;</span><br><span class="line"><span class="number">101</span>             cin&gt;&gt;s&gt;&gt;e&gt;&gt;t;</span><br><span class="line"><span class="number">102</span>             <span class="built_in">add1</span>(s,e,t);</span><br><span class="line"><span class="number">103</span>         &#125;</span><br><span class="line"><span class="number">104</span>         <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;w;i++)</span><br><span class="line"><span class="number">105</span>         &#123;</span><br><span class="line"><span class="number">106</span>             cin&gt;&gt;s&gt;&gt;e&gt;&gt;t;</span><br><span class="line"><span class="number">107</span>             <span class="built_in">add2</span>(s,e,t);</span><br><span class="line"><span class="number">108</span>         &#125;</span><br><span class="line"><span class="number">109</span>         <span class="built_in">chuanyue</span>(<span class="number">1</span>);</span><br><span class="line"><span class="number">110</span>         number=<span class="number">0</span>;</span><br><span class="line"><span class="number">111</span>     &#125;</span><br><span class="line"><span class="number">112</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">7</summary>
    
    
    
    <category term="程设" scheme="http://example.com/categories/%E7%A8%8B%E8%AE%BE/"/>
    
    
    <category term="7" scheme="http://example.com/tags/7/"/>
    
  </entry>
  
  <entry>
    <title>（hexo github）搭建云平台</title>
    <link href="http://example.com/2023/03/21/ok/"/>
    <id>http://example.com/2023/03/21/ok/</id>
    <published>2023-03-21T12:37:43.581Z</published>
    <updated>2023-03-26T09:16:39.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="山东大学实验报告3-1"><a href="#山东大学实验报告3-1" class="headerlink" title="山东大学实验报告3-1"></a>山东大学实验报告3-1</h1><h2 id="山东大学-计算机科学与技术-学院"><a href="#山东大学-计算机科学与技术-学院" class="headerlink" title="山东大学  计算机科学与技术  学院"></a>山东大学  计算机科学与技术  学院</h2><h2 id="云计算技术-课程实验报告"><a href="#云计算技术-课程实验报告" class="headerlink" title="云计算技术  课程实验报告"></a>云计算技术  课程实验报告</h2><table><thead><tr><th align="left"><strong>学号：202000130199  |姓名：荆树吉 |  班级：20数据</strong></th></tr></thead><tbody><tr><td align="left"><strong>实验题目：利用云平台搭建个人博客</strong></td></tr><tr><td align="left">**实验学时：2|<strong>实验日期： 2023.3.15</strong></td></tr><tr><td align="left"><strong>实验目的：熟悉个人博客系统的搭建。<br>具体包括：<br>参考方案：注册Github账号，搭建Hexo环境并实现个人博客搭建，撰写实验报告。</strong></td></tr><tr><td align="left"><strong>硬件环境： <br>联网的计算机一台</strong></td></tr><tr><td align="left">**软件环境：<br>Windows **</td></tr><tr><td align="left"><strong>实验步骤与内容：</strong></td></tr><tr><td align="left">•    1.安装Git<br>•<strong>windows：</strong>到git官网上下载.exe文件,Download git,安装选项还是全部默认，只不过最后一步添加路径时选择Use Git from the Windows Command Prompt，这样我们就可以直接在命令提示符里打开git了。<br>•2.安装Node.js<br>•<strong>windows：</strong>下载稳定版或者最新版都可以Node.js，安装选项全部默认，一路点击Next。<br>最后安装好之后，按Win+R打开命令提示符，输入node -v和npm -v，如果出现版本号，那么就安装成功了。<br>•3.安装Hexo<br>•前面git和nodejs安装好后，就可以安装hexo了，可以先创建一个文件夹MyBlog，用来存放自己的博客文件，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）<br>•定位到该目录下，输入npm install -g hexo-cli安装Hexo。可能会有几个报错，无视它就行<br>•npm install -g hexo-cli<br>•安装完后输入hexo -v验证是否安装成功。<br>•<br>•至此hexo就安装完了。<br>hexo init<br>这个Hexo可以自己取什么名字都行，然后，接着输入npm install安装必备的组件。<br><br>新建完成后，指定文件夹Hexo目录下有：<br><br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题**<br>_config.yml: 博客的配置文件**<br>这样本地的网站配置也弄好啦，输入hexo g生成静态网页，然后输入hexo s打开本地服务器，<br> <br><img src="/2023/03/21/ok/1.png" alt="初始">•4.GitHub创建个人仓库<br>•打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93New">https://github.com/，新建一个项目仓库New</a> repository，如下所示：<br>• <br><img src="/2023/03/21/ok/2.png" alt="建仓库"><br>•生成SSH添加到GitHub，连接Github与本地。<br>•右键打开git bash，然后输入下面命令：<br>•git config –global user.name “yourname”<br>•git config –global user.email “youremail”<br>•注意：第一次使用git后需要将用户名和邮箱进行初始化<br>•<br>•这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。例如<br>•git config –global user.name “jsj12345”<br>•git config –global user.email <a href="mailto:&#x32;&#49;&#49;&#53;&#53;&#50;&#53;&#56;&#51;&#x32;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#109;">&#x32;&#49;&#49;&#53;&#53;&#50;&#53;&#56;&#51;&#x32;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#109;</a><br>•可以用以下两条，检查一下你有没有输对<br>•git config user.name<br>•git config user.email<br>•然后创建SSH,一路回车<br>•ssh-keygen -t rsa -C “youremail”<br>•cat ~&#x2F;.ssh&#x2F;id_rsa.pub<br>•打开github，在头像下面点击settings，再点击SSH and GPG keys，新建一个SSH，名字随便取一个都可以，把你的id_rsa.pub里面的信息复制进去。如图：<br>• <br><img src="/2023/03/21/ok/3.png" alt="密钥">)在git bash输入ssh -T <a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#x67;&#105;&#x74;&#64;&#103;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a>，如果如下图所示，出现你的用户名，那就成功了。<br>•6.将hexo部署到GitHub<br>•这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息<br>•修改最后一行的配置：<br>• deploy:<br>•  type: git<br>•  repository: <a href="https://github.com/jsj12345/jsj12345.github.io.git">https://github.com/jsj12345/jsj12345.github.io.git</a><br>•  branch: master<br>•repository修改为你自己的github项目地址即可就是部署时，告诉工具，将生成网页通过git方式上传到你对应的链接仓库中。<br>•<br>•这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。<br>•npm install hexo-deployer-git –save<br>•hexo clean<br>•hexo generate<br>•hexo deploy<br>•<br>•7.设置个人域名<br>•可省略因为需要花钱，且意义不明显<br>•8.发布文章<br>•首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git。<br>•<br>•然后输入hexo new post “我的第一篇博客”，新建一篇文章。<br>•<br>•然后打开D:\Hexo\source_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。<br>•你可以会直接在vscode里面编写markdown文件，可以实时预览，也可以用用其他编辑md文件的软件的工具编写。<br>•编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦。<br>•<br>•到这儿基本第一部分就完成了，已经完整搭建起一个比较简陋的个人博客了，接下来我们就可以对我们的博客进行个性化定制了。<br>个性化定制暂略</td></tr><tr><td align="left">结论分析与体会：Hexo是高效的静态网站生成框架，它基于Node.js，快速，简单且功能强大，是搭建博客的首选框架。通过Hexo，我们可以直接使用Markdown语法来撰写博客</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">实验报告3-1</summary>
    
    
    
    <category term="云计算" scheme="http://example.com/categories/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="1" scheme="http://example.com/tags/1/"/>
    
  </entry>
  
</feed>
